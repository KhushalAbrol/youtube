class Solution {
    public int trap(int[] a) {
        int n=a.length;
        if(n==0 || n==1 || n==2) return 0;
        int water=0;
        int leftMax[] = new int[n];
        int rightMax[] = new int[n];
        int max=0;
        int curr=1;
        int prev=0;
        while(curr<n){
            prev=curr-1;
            if(a[prev]>max) max=a[prev];
            leftMax[curr]=max;
            curr++;
        }
        curr=n-2;
        max=0;
        while(curr>=0){
            prev=curr+1;
            if(a[prev]>max) max=a[prev];
            rightMax[curr]=max;
            curr--;
        }
        for(int i=0;i<n;i++){
            max=Math.min(rightMax[i], leftMax[i]);
            if(max-a[i]>0) water+=max-a[i];
        }
        return water;
    }
}
